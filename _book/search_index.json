[["templates.html", "Templates", " Templates Functions CalcAgeInYears &lt;- function(StartDT, EndDT) { require(lubridate) require(magrittr) interval(StartDT, EndDT) %&gt;% divide_by(years(1)) %&gt;% floor() } # # CalcMonthEndDT &lt;- function(Date) { # require(lubridate) # # # ceiling_date(Date, unit = &quot;months&quot;) - 1 # rollforward(Date) # } ExportPlot &lt;- function(PlotName, Width = 12, Height = 7) { # 12 x 7 works well with Google Slides ggsave(paste0(&quot;Viz-&quot;, PlotName, &quot;.png&quot;), width = Width, height = Height) } GenerateMonths &lt;- function(MinDT, MaxDT, EDWPatientID) { # Generate month values between two dates. Useful for claims data when months # without claims are missing (due to no submitted claims). Note that the data # warehouse has a calendar table. # # Arguments # - MinDT (date) # - MaxDT (date) # - EDWPatientID (char) # # Value # - Tibble. # # Details # - seq.Date() works best with month start dates; it does not perform reliably # when the input dates are month end dates (possibly due to dates having a # non-uniform number of days). # - Requires lubridate package. seq.Date( floor_date(MinDT, unit = &quot;months&quot;), floor_date(MaxDT, unit = &quot;months&quot;), by = &quot;month&quot; ) %&gt;% as_tibble_col(column_name = &quot;MonthStartDT&quot;) %&gt;% mutate( EDWPatientID = EDWPatientID, MonthEndDT = CalcMonthEndDT(MonthStartDT) ) %&gt;% select(EDWPatientID, MonthStartDT, MonthEndDT) } Scripts SQL - Snowflake /******************************************************************************* Ticket: Author: Michael Jensen *******************************************************************************/ /******************************************************************************* Input *******************************************************************************/ use database stg_raw; set min_date = &#39;&#39;::date; set max_date = dateadd(mm, -1, last_day(current_date()))::date; /******************************************************************************* Data Wrangling *******************************************************************************/ /******************************************************************************* EDA *******************************************************************************/ /******************************************************************************* Output Export files as &lt;temp_table_name&gt;.csv *******************************************************************************/ SQL - TSQL /******************************************************************************* Ticket: Author: Michael Jensen *******************************************************************************/ /******************************************************************************* Input *******************************************************************************/ declare @MinDT date = &#39;&#39; declare @MaxDT date = dateadd(mm, -1, eomonth(getdate())) /******************************************************************************* Data Wrangling *******************************************************************************/ /******************************************************************************* EDA *******************************************************************************/ /******************************************************************************* Output Export files as &lt;temp_table_name&gt;.csv *******************************************************************************/ R - Data Wrangling # #| label: setup # Packages &amp; Data Sources ------------------------------------------------------ # install.packages(&quot;pacman&quot;) pacman::p_load( cli, conflicted, glue, here, janitor, # lubridate, # magrittr, tidyverse ) conflicts_prefer( dplyr::filter() ) # The output of here::here() should be /Users/crossover/Documents/xo-outcomes # - Use theme_xo() from OutcomesLibrary.R for presentations source(glue(here(), &quot;/OutcomesLibrary.R&quot;)) data_path &lt;- &quot;~/Downloads/Data-&quot; file.exists(data_path) || cli_abort(glue( &quot;data_path not found. Place data files in {data_path} and try again.&quot; )) # Functions -------------------------------------------------------------------- export_plot &lt;- function(plot_name, width = 12, height = 7) { # 12 x 7 works well with Google Slides ggsave(paste0(&quot;viz-&quot;, plot_name, &quot;.png&quot;), width = width, height = height) } # Data Wrangling --------------------------------------------------------------- df &lt;- read_csv( glue(&quot;{data_path}/.csv&quot;) ) |&gt; rename_with(tolower) R - EDA source(&quot;2DataWrangling.R&quot;) # Set ggplot2 theme # - Use theme_xo() from OutcomesLibrary.R for presentations theme_set( theme_classic() + theme(panel.grid.major = element_line(), panel.grid.minor = element_line()) ) Snippets # TODO: Consider turning into a function. AgeGroupDSC &lt;- tibble( AgeNBR = c(0:110) ) %&gt;% mutate( AgeGroupDSC1 = case_when( AgeNBR %in% c(0:2) ~ &quot;Infant (0-2)&quot;, AgeNBR %in% c(3:6) ~ &quot;Child, Preschool (3, 6)&quot;, AgeNBR %in% c(7:12) ~ &quot;Child (7, 12)&quot;, AgeNBR %in% c(13:17) ~ &quot;Adolescent (13, 17)&quot;, AgeNBR %in% c(18:24) ~ &quot;Young Adult (18, 24)&quot;, AgeNBR %in% c(25:44) ~ &quot;Adult (25, 44)&quot;, AgeNBR %in% c(45:64) ~ &quot;Middle-Aged (45, 64)&quot;, AgeNBR %in% c(65:79) ~ &quot;Aged (65, 79)&quot;, AgeNBR &gt; 79 ~ &quot;Elderly (80+)&quot;, ), AgeGroupDSC2 = case_when( AgeNBR %in% c(0:17) ~ &quot;Child&quot;, AgeNBR %in% c(18:44) ~ &quot;Adult (18-44)&quot;, AgeNBR %in% c(45:64) ~ &quot;Middle-Aged (45-64)&quot;, AgeNBR &gt; 64 ~ &quot;Aged (65+)&quot; ) %&gt;% factor(levels = c( &quot;Child&quot;, &quot;Adult (18-44)&quot;, &quot;Middle-Aged (45-64)&quot;, &quot;Aged (65+)&quot; )) ) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
