[["transform.html", "Transform Arithmetic &amp; Summary Statistics Create New Variables or Modify Existing Ones Dates and Datetimes Factors Merge or Append Data Narrow in on Observations of Interest Test", " Transform “Transformation includes narrowing in on observations of interest (like all people in one city, or all data from the last year), creating new variables that are functions of existing variables (like computing velocity from speed and time), and calculating a set of summary statistics (like counts or means).” - Garrett Grolemund &amp; Hadley Wickham, R for Data Science Arithmetic &amp; Summary Statistics {base} mean() Use base::mean(variable == value) to calculate proportion; see example below. table() Use to view the mode of a data set. Operators: Comparison Operators (&lt;, &gt;, &lt;=, &gt;=, ==, !=) Use identical() and all.equal() rather than == and != in tests where a single TRUE or FALSE is required (such as if expressions). range() Use diff(range()) to get the range as a measure of variability. {dplyr} all_equal() Compare data frames. near() Compare two numeric vectors (safer than using ==). {dummies} dummy.data.frame() Useful when needing to calculate the Jaccard index for categorical data. {infer} {magrittr} extract2() See dplyr::pull(). {stats} See {infer} for easier-to-use alternatives to {stats}’s hypothesis testing functions, such as prop.test() and t.test(). cutree() Pair with stats::hclust(). Examples base::mean() by_country &lt;- votes %&gt;% group_by(country) %&gt;% summarize( total = n(), percent_yes = mean(vote == 1)) # Classification Trees: Compute the accuracy on the test dataset: mean(loans_test$outcome == loans_test$prediction) Create New Variables or Modify Existing Ones countrycode countrycode(): Convert country codes into country names. dplyr mutate(): Add new variables. mutate() can also be used to modify existing variables. To change the case of a character variable, for example, do something like: Child function: transmute() (drops existing variables). recode(): Recode values (the numeric alternative to using if_else or case_when()). Example: dplyr::mutate df &lt;- df %&gt;% mutate(var_name = str_to_lower(var_name)) # Add a T/F vector, which can then be referenced to highlight certain # information in a plot: df &lt;- df %&gt;% mutate(hilight = attributed_provider_id = 95597) Dates and Datetimes base::date Get the current system date and time. base::difftime Time intervals and differences. base::difftime is the function behind the - operator when used with dates and datetimes (e.g., time_1 - time_2 is equivalent to difftime(time_1, time_2)). The advantage of using difftime over -, however, is the units argument because it allows you to specify the unit of time in which the difference is calculated. base::months Extract the month names. base::quarters Extract the calendar quarters. base::seq.Date base::Sys.Date Get the current date in the current time zone. base::Sys.time Get the absolute date-time value (which can be converted to various time zones and may return different days). base::weekdays Extract weekday names. lubridate::ceiling_date lubridate::date Get or set the date component of a date-time. lubridate::day Get or set the day component of a datetime. lubridate::floor_date lubridate::month Get or set the month component of a datetime. lubridate::now The current time (as a POSIXct object). lubridate::quarter Get or set the fiscal quarter or semester component of a datetime. lubridate::round_date Time spans: Duration Use when you are interested in seconds elapsed. lubridate::ddays lubridate::dhours lubridate::dminutes lubridate::dseconds lubridate::dweeks lubridate::dyears Time spans: Interval Use when you have a start and end. %--% int_aligns int_diff int_end int_flip int_length int_overlaps int_shift int_standardize int_start interval is.interval Time spans: Period Use when you are interested in human units. lubridate::day lubridate::hour lubridate::minute lubridate::month lubridate::second lubridate::week lubridate::year Time zones: lubridate::force_tz Change the time zone without changing the clock time. lubridate::tz Extract the time zone from a datetime. lubridate::with_tz View the same instant in a different time zone. lubridate::today lubridate::%m+% &amp; %m-% Add and subtract months to a date without exceeding the last day of the new month. lubridate::%within% Test whether a date or interval falls within an interval. lubridate::year Get or set the year component of a datetime. Factors forcats fct_drop(): Drop levels. fct_reorder(): Reorder levels, based on the value of another variable. fct_rev(): Reverse levels. stats reorder(): Reorder levels of a factor. Useful within the aes() argument in a ggplot() call. Merge or Append Data base append(): Add elements to a vector. cbind(): Combine objects by column. intersect(): Combine data shared in common between two datasets. Similar to dplyr::semi_join(). merge(): Merge two data frames. dplyr::join functions are an alternative to merge(). rbind(): Combine objects by row. setdiff(): Find the difference between two vectors. Similar to dplyr::anti_join(). union(): Combine two datasets without duplicating values. dplyr bind(): Bind multiple data frames by row and column. Child functions: bind_rows(), bind_cols(), combine(). Join Functions: Join two tables. Filtering Joins: anti_join(): Return all rows from x where there are not matching values in y, keeping just columns from x. semi_join(): Return all rows from x where there are matching values in y, keeping just columns from x. A semi join differs from an inner join because an inner join will return one row of x for each matching row of y, where a semi join will never duplicate rows of x. Mutating Joins: full_join(): Return all rows and all columns from both x and y. Where there are not matching values, returns NA for the one missing. inner_join(): Return all rows from x where there are matching values in y, and all columns from x and y. If there are multiple matches between x and y, all combination of the matches are returned. left_join(): Return all rows from x, and all columns from x and y. Rows in x with no match in y will have NA values in the new columns. If there are multiple matches between x and y, all combinations of the matches are returned. right_join(): Return all rows from y, and all columns from x and y. Rows in x with no match in y will have NA values in the new columns. If there are multiple matches between y and x, all combinations of the matches are returned. tibble add_column(): Add columns to a data frame. add_row(): Add rows to a data frame. Narrow in on Observations of Interest {base} order() See also: dplyr::arrange(). prop.table() Express table entries as proportions of the marginal table (thus, as the values are proportions of the whole, sum(prop.table(table_name)) = 1.) The input is a table produced by base::table(). Specify conditional proportions on rows or columns by using the margin argument. table(): Build a table of the counts at each combination of factor levels. Use base::prop.table() to see the table entries expressed as proportions. {dplyr} arrange() distinct() filter() When using multiple | conditions, use %in% to save space; see example below. rename() sample_n() select() Use ?dplyr::select_helpers to see the available helper functions. slice() slice_min(), slice_max() transmute() A combination of dplyr::select() and dplyr::mutate(). Examples dplyr::filter() ilo_data %&gt;% filter(country %in% c(&quot;Sweden&quot;, &quot;Switzerland&quot;)) ilo_data %&gt;% filter(country == &quot;Sweden&quot; | country == &quot;Switzerland&quot;) Test {base} identical() See also dplyr::all_equal(), dplyr::near(). match() %in% is the more intuitive binary operator. setequal() Check two vectors for equality. See also dplyr::near(). which() This function is often unnecessary, according to “Five Tips to Improve Your R Code”. which.max() Use also to identify the first TRUE/FALSE. which.min() Use also to identify the first TRUE/FALSE. {dplyr} all_equal() Compare data frames. near() See also base::identical(). "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
